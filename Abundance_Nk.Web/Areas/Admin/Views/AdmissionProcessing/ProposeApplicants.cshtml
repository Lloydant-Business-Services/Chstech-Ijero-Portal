@model Abundance_Nk.Web.Areas.Admin.ViewModels.AdmissionProposalViewModel

@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<link rel="stylesheet" href="//cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css">
<script src="//cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>

<link rel="stylesheet" href="https://cdn.datatables.net/buttons/1.4.1/css/buttons.dataTables.min.css">
<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.4.1/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.4.1/js/buttons.flash.min.js"></script>
<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.4.1/js/buttons.html5.min.js"></script>
<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.4.1/js/buttons.print.min.js"></script>

@section Scripts {

    <link href="~/Content/jquery-ui-1.10.3.css" rel="stylesheet" />


    @Scripts.Render("~/bundles/jquery")

    @*<script src="~/Scripts/jquery-1.11.1.min.js"></script>
        <script src="~/Scripts/jquery-migrate-1.2.1.min.js"></script>
        <script src="~/Scripts/prettify.js"></script>
        <script src="~/Scripts/custom.js"></script>
        <script src="~/Scripts/jquery.min.js"></script>
        <script src="~/Scripts/responsive-tabs.js"></script>*@

    <style>
        .modal-backdrop.in {
            z-index: 0 !important
        }

        .btn-primary {
            background: #5b796e !important
        }
    </style>




    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/file-upload/jquery-ui-1.9.2.min.js"></script>




    <script type="text/javascript">
        $(document).ready(function () {

            $("#DepartmentOption").hide();
            $("#selectedDepartmentOption").hide();
            $("#Programme").change(function () {

                var programme = $("#Programme").val();

                $("#Department").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetDepartments", "UploadReturningStudents")', // Calling json method
                dataType: 'json',
                data: { id: programme },
                // Get Selected Country ID.
                success: function(departments) {
                    $("#Department").append('<option value="' + 0 + '">' +
                        '-- Select Department --' + '</option>');
                    $.each(departments, function(i, department) {
                        $("#Department").append('<option value="' + department.Value + '">' +
                            department.Text + '</option>');
                    });
                },
                error: function(ex) {
                    alert('Failed to retrieve departments.' + ex);
                }
            });


                //$("#divDepartmentOption").hide();

            });



                $("#Department").change(function () {
                    $("#DepartmentOption").empty();

                    var programme = $("#Programme").val();
                    var department = $("#Department").val();


            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartmentOption", "UploadReturningStudents")', // we are calling json method
                dataType: 'json',
                data: { departmentId: parseInt(department), programmeId: parseInt(programme) },
                success: function (departmentOptions) {

                    if (departmentOptions == "" || departmentOptions == null || departmentOptions == undefined || departmentOptions.Lenght <= 0) {
                        $("#DepartmentOption").hide();
                    } else {
                        $("#DepartmentOption").show();
                        $("#DepartmentOption").append('<option value="' + 0 + '"> -- Select -- </option>');
                        $.each(departmentOptions, function (i, Option) {
                            $("#DepartmentOption").append('<option value="' + Option.Value + '">' + Option.Text + '</option>');
                        });
                        if (programme > 2) {
                            $("#divDepartmentOption").show();
                        }

                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve department Options.' + ex);
                }
            });

        });



             $("#selectedDepartment").change(function () {
                    $("#selectedDepartmentOption").empty();

                    var programme = $("#selectedProgramme").val();
                    var department = $("#selectedDepartment").val();


            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartmentOption", "UploadReturningStudents")', // we are calling json method
                dataType: 'json',
                data: { departmentId: parseInt(department), programmeId: parseInt(programme) },
                success: function (departmentOptions) {

                    if (departmentOptions == "" || departmentOptions == null || departmentOptions == undefined || departmentOptions.Lenght <= 0) {
                        $("#selectedDepartmentOption").hide();
                    } else {
                        $("#selectedDepartmentOption").show();
                        $("#selectedDepartmentOption").append('<option value="' + 0 + '"> -- Select -- </option>');
                        $.each(departmentOptions, function (i, Option) {
                            $("#selectedDepartmentOption").append('<option value="' + Option.Value + '">' + Option.Text + '</option>');
                        });
                        if (programme > 2) {
                            $("#divDepartmentOption").show();
                        }

                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve department Options.' + ex);
                }
            });

        });

            $('#example').DataTable({
                dom: 'Bfrtip',
                ordering: true,
                retrieve: true,
                buttons: [
                    {
                        extend: 'copy',
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    {
                        extend: 'csv',
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    {
                        extend: 'excel',
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    {
                        extend: 'pdf',
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    {
                        extend: 'print',
                        exportOptions: {
                            columns: ':visible'
                        }
                    }, , 'colvis'
                ]
            });
        });
    </script>







    <script type="text/javascript">
        var person = null;
        let proposeArr = [];

        function selectApplicant() {
            dept = $("#selectedDepartment").val();
            programme = $("#selectedProgramme").val();
            sessionSelect = $("#selectedSession").val();
            departmentOptionSelect = $("#selectedDepartmentOption").val();
            //deptOption = $("#DepartmentOption").val();
            const form = typeof window !== "undefined" ? document.querySelectorAll("input[name=applicant]") : [];
            proposeArr = [];
            for (let a of form) {
                if (a.checked)
                    proposeArr.push(a.value)
            }
            setTimeout(() => {
                let removeDuplicates = [...new Set(proposeArr)];
                //console.log(cleanArray, "Clean")
                console.log(proposeArr, "Selected App")
            }, 1000)
        }








        $("#btnSearch").click(function () {
            $("#processing").show();
        })



        $("#btnSend").click(function () {
            if (departmentOptionSelect == null || departmentOptionSelect == undefined) {
                departmentOptionSelect = 0;
            }

            $.ajax({
                type: "POST",
                url: "@Url.Action("AddProposeApplicants", "AdmissionProcessing")",
                //dataType: 'json',
                traditional: true,
                data: { programmeId: programme, departmentId: dept, sessionId: sessionSelect, departmentOptionId: departmentOptionSelect, applicantIds: proposeArr },
                beforeSend: function () {
                    $("#processing").show();
                },
                complete: function () {
                    $("#processing").hide();
                },
                success: SuccessFunc,
                error: ErrorFunc,
            })
            function SuccessFunc(data, status) {
                alert("Operation Successful")
                $("#processing").hide();
                //BindSelectAll();
                BindSelectOne();
            }
            function ErrorFunc() {
                alert("Operation failed!");
            }
        });
    </script>
}

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-success">
            <div class="panel-heading">
                <h4>This interface allows the Admission Proposal Officer to select/propose applicant(s) for possible admission</h4>
                <p>
                    Kindly select the session, programme, department and then click the "Load Applicants" button.
                </p>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">

        @using (Html.BeginForm("ProposeApplicants", "AdmissionProcessing", new { area = "Admin" }, FormMethod.Post))
            {
            <div class="panel panel-default">
                <div class="panel-body ">
                    <div class="form-inline ">

                        <div class="form-group">
                           @Html.DropDownListFor(m => m.Session.Id, (IEnumerable<SelectListItem>)ViewBag.SessionSelectList, new { @class = "form-control", required = "required" })
                            @Html.DropDownListFor(m => m.Programme.Id, (IEnumerable<SelectListItem>)ViewBag.ProgrammeSelectList, new { @class = "form-control", @id = "Programme", required = "required" })
                            @Html.DropDownListFor(m => m.Department.Id, (IEnumerable<SelectListItem>)ViewBag.DepartmentSelectList, new { @class = "form-control", @id = "Department", required = "required" })
                           
                            
                                @Html.DropDownListFor(m => m.DepartmentOption.Id, (IEnumerable<SelectListItem>)ViewBag.DepartmentOptionSelectList, new { @class = "form-control", @id = "DepartmentOption", required = "required" })
                          
                            <button class="btn btn-primary btn-metro mr5" type="submit" name="btnSearch" id="btnSearch">Load Applicants</button>
                            <br />
                            <div>
                                <span id="processing" style="display:none"><img width="30px" height="30px" src="@Url.Content("~/Content/Images/bx_loader.gif")" /></span>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        }
        <div>

            @*@if (Model != null && Model.ListOfAdmission != null && Model.ListOfAdmission.Count > 0)
                {*@
            @if (Model != null && Model.ApplicantAppliedCourse != null && Model.ApplicantAppliedCourse.Count > 0)
            {

                <div style="width:100%; align-content:flex-end">

                </div>
                <div class="form-inline ">

                    <div class="form-group">
                        <h4>Admit into: </h4>
                        @Html.DropDownListFor(m => m.Session.Id, (IEnumerable<SelectListItem>)ViewBag.SessionSelectList, new { @class = "form-control", @id = "selectedSession", required = "required" })
                        @Html.DropDownListFor(m => m.Programme.Id, (IEnumerable<SelectListItem>)ViewBag.ProgrammeSelectList, new { @class = "form-control", @id = "selectedProgramme", required = "required" })
                        @Html.DropDownListFor(m => m.Department.Id, (IEnumerable<SelectListItem>)ViewBag.DepartmentSelectList, new { @class = "form-control", @id = "selectedDepartment", required = "required" })
                      
                    
                        @Html.DropDownListFor(m => m.DepartmentOption.Id, (IEnumerable<SelectListItem>)ViewBag.DepartmentOptionSelectList, new { @class = "form-control", @id = "selectedDepartmentOption", required = "required" })

                        @*<button onclick="selectApplicant()" class="btn btn-success float-right">Confirm Selected Applicants</button>
                            <button id="btnSend" class="btn btn-success float-right">Send</button>*@

                        <button type="button" onclick="selectApplicant()" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
                            Proceed with selected applicants
                        </button>

                    </div>

                </div>
                <br />

                <div class="modal" id="myModal">
                    <div class="modal-dialog" style="z-index:99999999999999">
                        <div class="modal-content">

                            <!-- Modal Header -->
                            <div class="modal-header">
                                <h4 class="modal-title">
                                    @*Modal Heading*@
                                </h4>
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                            </div>

                            <!-- Modal body -->
                            <div class="modal-body">
                                Propose Selected Applicants for Admission?
                            </div>

                            <!-- Modal footer -->
                            <div class="modal-footer">
                                <button type="button" class="btn btn-success" id="btnSend" data-dismiss="modal">Confirm</button>
                                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                            </div>

                        </div>
                    </div>
                </div>

                <table id="example" class="display nowrap table-responsive" style="width:100%">
                    <thead>
                        <tr class="well" style="height:35px; vertical-align:middle">
                            <th>
                                SN
                            </th>
                            <th>
                                Name
                            </th>
                            <th>
                                Sex
                            </th>
                            <th>
                                Application Number
                            </th>
                            <th>
                                State
                            </th>
                            @if (Model.Programme.Id == 1 || Model.Programme.Id == 2 || Model.Programme.Id == 6)
                            {
                                <th>
                                    Jamb Reg No.
                                </th>
                                <th>
                                    JAMB Subjects & Grades
                                </th>

                                <th>
                                    Aggregate Points
                                </th>
                            }
                            
                            <th>
                                Check
                            </th>
                            @*<th>
                                    Jamb Subjects
                                </th>
                                <th>
                                    O' Level Subjects
                                </th>
                                <th>
                                    State of Origin
                                </th>
                                <th>
                                    Aggregate Score
                                </th>
                                <th>
                                    IT Year/Month
                                </th>
                                <th>
                                    School Finished
                                </th>
                                <th>
                                    Approved Date
                                </th>
                                <th>
                                    Proposed Date
                                </th>
                                <th>
                                    Name of Proposed Officer
                                </th>*@
                        </tr>
                    </thead>


                    @for (int i = 0; i < Model.ApplicantAppliedCourse.Count; i++)
                    {
                        var sn = i + 1;
                        <tr>
                            <td>
                                @sn
                            </td>
                            <td>
                                @Model.ApplicantAppliedCourse[i].Person.FullName.ToUpper()
                            </td>
                            <td>
                                @Model.ApplicantAppliedCourse[i].Person.Sex.Name
                            </td>
                            <td>
                                @Model.ApplicantAppliedCourse[i].ApplicationForm.Number
                            </td>
                            <td>
                                @Model.ApplicantAppliedCourse[i].Person.State.Name
                            </td>
                            @if (Model.ApplicantJambDetail.Count > 0 && (Model.Programme.Id ==1 || Model.Programme.Id == 2 || Model.Programme.Id == 6))
                            {
                                var jambDetail = Model.ApplicantJambDetail.Where(f => f.Person.Id == Model.ApplicantAppliedCourse[i].Person.Id).FirstOrDefault();
                                if (jambDetail != null && !string.IsNullOrEmpty(jambDetail.JambRegistrationNumber))
                                {
                                    <td>@jambDetail.JambRegistrationNumber.ToUpper()</td>
                                    
                                }
                                else
                                {
                                    <td>
                                        <p>-</p>
                                    
                                </td>
                                }
                                if (jambDetail == null)
                                {
                                    <td>
                                        <p style="font-size:11px"> - </p>
                                        <p style="font-size:11px"> - </p>
                                        <p style="font-size:11px"> - </p>
                                        <p style="font-size:11px"> - </p>
                                    </td>
                                }
                                else if (jambDetail.Subject1 == null || jambDetail.Subject2 == null)
                                {
                                    <td>
                                        <p style="font-size:11px"> - </p>
                                        <p style="font-size:11px"> - </p>
                                        <p style="font-size:11px"> - </p>
                                        <p style="font-size:11px"> - </p>
                                    </td>
                                }
                                else
                                {
                                        <td>
                                        <p style="font-size:11px">@Model.ApplicantJambDetail[i].Subject1.Name - @Model.ApplicantJambDetail[i].Subject1Score</p>
                                        <p style="font-size:11px">@Model.ApplicantJambDetail[i].Subject2.Name - @Model.ApplicantJambDetail[i].Subject2Score</p>
                                        <p style="font-size:11px">@Model.ApplicantJambDetail[i].Subject3.Name - @Model.ApplicantJambDetail[i].Subject3Score</p>
                                        <p style="font-size:11px">@Model.ApplicantJambDetail[i].Subject4.Name - @Model.ApplicantJambDetail[i].Subject4Score</p>
                                        <p style="font-size:11px">Jamb Score - @Model.ApplicantJambDetail[i].JambScore</p>
                                            </td>
                                    }
                                    if (Model.ApplicantResult.Count <= 0 || Model.ApplicantResult[i].AggregateScore == null)
                                    {
                                        <td>
                                            <p>-</p>

                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                        <p style="font-size:11px"> @Model.ApplicantResult[i].AggregateScore</p>
                                            </td>

                                }

                            }
                            else
                            {
                                
                            }

                            @*<td>
                                    @Html.CheckBox(" ", false, new { @class = "ckb", id = Model.ApplicantAppliedCourse[i].Person.Id })
                                </td>*@
                            <td>
                                <input id="ApplicantCheck" type="checkbox" value=@Model.ApplicantAppliedCourse[i].ApplicationForm.Id name="applicant" />

                            </td>
                        </tr>
                    }



                </table>
            }



        </div>
    </div>


</div>

<!-- Modal Small -->
<div class="modal fade" id="modal-reject" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Reject Applicant</h4>
            </div>
            <div class="modal-body">
                <input type="text" id="remark" class="form-control col-md-2" placeholder="Reject Reason..." />
            </div>
            <div class="modal-footer">
                <button type="button" onclick="rejectApplicant()" class="btn btn-primary btn-sm">Save</button>
                <button type="button" class="btn btn-dark btn-sm" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>